/**
 * Copyright (c) 2014 Virtue Studios
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */
package org.virtue;

import java.io.File;
import java.math.BigInteger;

import org.virtue.game.world.region.Tile;


/**
 * @author Im Frizzy <skype:kfriz1998>
 * @since Aug 8, 2014
 */
public class Constants {
	
	/**
	 * The Framework Name
	 */
	public static final String FRAME_NAME = "Virtue";
	
	/**
	 * The Framework Version
	 */
	public static final double FRAME_VERSION = 1.0;
	
	/**
	 * The Framework Major Revision
	 */
	public static final int FRAME_MAJOR = 865;
	
	/**
	 * The Framework Minor Revision
	 */
	public static final int FRAME_MINOR = 1;
	
	/**
	 * The interval between maintenance thread cycles, in minutes
	 * The maintenance thread is responsible for auto-saving player data and the account index, and for performing cleanup operations
	 */
	public static final int MAINTANANCE_INTERVAL = 1;
	
	/**
	 * Represents the initial server day. This is a day determined by Jagex, a few months prior to the release of RS2.
	 */
	public static final int SERVER_DAY_INITIAL = 11745;
	
	/**
	 * The number of ticks before a ground item is destroyed, after being dropped
	 */
	public static final int ITEM_REMOVAL_DELAY = 300;
	
	/**
	 * The number of ticks where the player is inactive before they are automatically logged out
	 * NB: 100 ticks = 1 minute
	 */
	public static final int KICKOUT_TIME = 500;

	/*
	 * Server Name
	 */
	public static final String SERVER_NAME = "Virtue";
	
	/**
	 * The rate to multiply all xp gains by, where 1 is the normal RuneScape rate
	 */
	public static final float GLOBAL_XP_MULTIPLYER = 1;
	
	/**
	 * Whether or not to lead GE Prices from a JSON File
	 */
	public static final boolean CUSTOM_GE_PRICES = true;
	
	/**
	 * The Start spawn location
	 */
	public static final Tile START_TILE = new Tile(3210, 3256, 0);

	/**
	 * The Death Spawn Location
	 */
	public static final Tile RESPAWN_TILE = new Tile(3210, 3256, 0);
	
	/**
	 * The Cache Repository
	 */
	public static final String CACHE_REPOSITORY = System.getProperty("user.home") + "/Desktop/863/";
	
	/**
	 * The packed npc extra data, which includes descriptions and animations
	 */
	public static final File NPC_DATA = new File("./repository/npc_data_861.dat");
	
	/**
	 * The packed item extra data, which includes descriptions and weights
	 */
	public static final File ITEM_DATA = new File("./repository/item_data_861.dat");
	
	/**
	 * The OnDemand Delta Keys
	 */
	public static final int[] ONDEMAND_DELTA = { 3264,69795,41651,35866,358716,44375,18239,20886,179447,1100187,431692,560241,841351,1162450,35303,830731,1007,20622,1244,66629,2153,119,1372622,4274445,8991,23274 };
	/*public static int[] ONDEMAND_DELTA = { 2669, 69795, 41651, 35866, 358716,
			44375, 18239, 20659, 169721, 1097108, 424520, 554913, 810107,
			1150265, 34839, 819640, 20552, 1244, 65295, 2109, 119, 1349461,
			4157265, 8991, 23087 };*/
	
	/**
	 * The OnDemand Session Token
	 */
	private static final String ONDEMAND_TOKEN = "o6hcMvF7YGtmQdDklg*V9SsG5-y*DfWB";
		
	
	public static String getJs5Token () {
		return Virtue.getInstance().getProperty("js5.token", ONDEMAND_TOKEN);
	}
	
	/**
	 * The Login Session Token
	 */
	private static final String LOGIN_TOKEN = "wwGlrZHF5gKN6D3mDdihco3oPeYN2KFybL9hUUFqOvk";
	
	public static String getLoginToken () {
		return Virtue.getInstance().getProperty("login.token", LOGIN_TOKEN);
	}
	
	
	public static final int SERVER_PORT = 43594;

	public static BigInteger getLoginModulus () {
		return new BigInteger(Virtue.getInstance().getProperty("login.modulus", LOGIN_MODULUS));
	}

	public static BigInteger getLoginKey () {
		return new BigInteger(Virtue.getInstance().getProperty("login.key", LOGIN_EXPONENT));
	}

	/**
	 * The OnDemand Modulus RSA Key
	 */
	public static final String ONDEMAND_MODULUS = "890094374537925125498424164274805140291095224988898686904020327958247376299559179433090165413896695834814524421239883268170101297859046907389386714739602084722622444290350756187583629308316606567012736158244853843064018809375600237639802271001138434268943014246109881712610230701134219400000573439338608602761145799329244467230953670310868179607892965736365491721049590147898847107991091253970952282622530893732818986850950532701501409331480865908212186076931344519569381598985134483184910625805515610634065229025602562365025181129268140479826241206557228994732045896356524599892444123835589709825402770904496373384328481694086472086206184235168305257817221367456446512445041792290032363583394003106353590970437334790758227945155273824637603493996079192379940037628937522240308201118318638490457328655325949624318617490355803047959123798355071845776701971615823238668302447993705282276250537460180196927814308163162778110354543272720250433807713207362037352483299396467761404332229216106451386495385212495023227474111452655115345605835142251644265360151249885143330877705247655708157514006393758406008675547187044681969652885873894699868932322699722391942341409990056247738086854981756599133489980945072569205921085849100550502596651";

	/**
	 * The OnDemand Exponent RSA Key
	 */
	public static final String ONDEMAND_EXPONENT = "491869598368333862475409761407698597140276556268946623203930607097302088592166794976101948984995998235403555494447771677678996423444210793872377882127796955922829767038761966310473911210918934699954731719593445332871606957906934070927309444231155370790302275110809397380165282436978758408081248267071838032830273834147243810751731359750650807828851666190216406734661823958928615085570065167063063732966989316682603299323954781151373652140758823866393221095902247175194542380469744273357412198058692850675546734430798211676026549274113477510679267460162604410839919040884506384328009466237846055373861891009311391404621497343064818401735152679002316333253690040764315191229610296849516436173898015223816528760566893901898014407012591490628377075210421354837917436070847429581899487595043122867895923504357323790193518318619340469934072732312311174154720641614085669169154949833650084576415633218471326437838451986613768816365336640653829224662571535403238809631327535443149328104104047942684794087588566607560926607592824264206454639659804307215076208404213120621058057359597700892370078300287317219735453277597154512383510179820071220001051807930462819069809827094260242701520719479033196466743117998613431985432684780298199700826369";

	/**
	 * The Login Modulus RSA Key
	 */
	public static final String LOGIN_MODULUS = "20301658383069739379396381511216346166031914273289774014819767331073754468550161821776912609746623225620833052805201391974925871845194580840347595448977254275482134360617526042001372253329793950790766076294737286884940324987446888249700461411642974417735229967388420925705521482327621885061968600232573124554502594284326136503906775530491383911960827547156229395484203872000066561405314486360577741844624720713938232845067276510915455155379369068159750391286939194213126970472640855299752896193565545836135772690246419556833450967331751556830760413331059293279235438803515856658593242278995146402107656335427068809933";

	/**
	 * The Login Exponent RSA Key
	 */
	public static final String LOGIN_EXPONENT = "5620539385422240128473502695263887343584281437578309347771333116483851886375240491544017919514819595124348000520279751224393167504756251808402379904881872859214609241177417222425086564298270922427753172838117602777673028313353317063682578876861164347397470322539870748981506351760873574966268799039013179912289587779090996195326072699588520191604501647927725339533992376274928440182011536808891409006640716828119172417727015209894057585705439231355562856899217515938315415996708069470284146542559581940681373813695090070186270227598154221920635348012113371754808296236749573020881419644105821241867388728277827749889";


	/**
	 * The 834 Packet Sizes
	 */
	public static final int[] PACKET_SIZES = new int[122];

	/**
	 * Loads the 834 Packet Sizes
	 */
	static {
		PACKET_SIZES[0] = -2;
		PACKET_SIZES[1] = 8;
		PACKET_SIZES[2] = 9;
		PACKET_SIZES[3] = 18;
		PACKET_SIZES[4] = 0;
		PACKET_SIZES[5] = 3;
		PACKET_SIZES[6] = -1;
		PACKET_SIZES[7] = 9;
		PACKET_SIZES[8] = 4;
		PACKET_SIZES[9] = -2;
		PACKET_SIZES[10] = 8;
		PACKET_SIZES[11] = 1;
		PACKET_SIZES[12] = 5;
		PACKET_SIZES[13] = -1;
		PACKET_SIZES[14] = -1;
		PACKET_SIZES[15] = -1;
		PACKET_SIZES[16] = -1;
		PACKET_SIZES[17] = 8;
		PACKET_SIZES[18] = 3;
		PACKET_SIZES[19] = 1;
		PACKET_SIZES[20] = 1;
		PACKET_SIZES[21] = -2;
		PACKET_SIZES[22] = 4;
		PACKET_SIZES[23] = 8;
		PACKET_SIZES[24] = -2;
		PACKET_SIZES[25] = 7;
		PACKET_SIZES[26] = 3;
		PACKET_SIZES[27] = 16;
		PACKET_SIZES[28] = 8;
		PACKET_SIZES[29] = 1;
		PACKET_SIZES[30] = 3;
		PACKET_SIZES[31] = 3;
		PACKET_SIZES[32] = 15;
		PACKET_SIZES[33] = 9;
		PACKET_SIZES[34] = -1;
		PACKET_SIZES[35] = 16;
		PACKET_SIZES[36] = 4;
		PACKET_SIZES[37] = 8;
		PACKET_SIZES[38] = 4;
		PACKET_SIZES[39] = 3;
		PACKET_SIZES[40] = -1;
		PACKET_SIZES[41] = 9;
		PACKET_SIZES[42] = 8;
		PACKET_SIZES[43] = 7;
		PACKET_SIZES[44] = 3;
		PACKET_SIZES[45] = -1;
		PACKET_SIZES[46] = 3;
		PACKET_SIZES[47] = 4;
		PACKET_SIZES[48] = -1;
		PACKET_SIZES[49] = 9;
		PACKET_SIZES[50] = -1;
		PACKET_SIZES[51] = 17;
		PACKET_SIZES[52] = -1;
		PACKET_SIZES[53] = 3;
		PACKET_SIZES[54] = 9;
		PACKET_SIZES[55] = 2;
		PACKET_SIZES[56] = 18;
		PACKET_SIZES[57] = 6;
		PACKET_SIZES[58] = 0;
		PACKET_SIZES[59] = 11;
		PACKET_SIZES[60] = 0;
		PACKET_SIZES[61] = -2;
		PACKET_SIZES[62] = 3;
		PACKET_SIZES[63] = -1;
		PACKET_SIZES[64] = -1;
		PACKET_SIZES[65] = -1;
		PACKET_SIZES[66] = -1;
		PACKET_SIZES[67] = -1;
		PACKET_SIZES[68] = -1;
		PACKET_SIZES[69] = 0;
		PACKET_SIZES[70] = 4;
		PACKET_SIZES[71] = 3;
		PACKET_SIZES[72] = -1;
		PACKET_SIZES[73] = 11;
		PACKET_SIZES[74] = 3;
		PACKET_SIZES[75] = 6;
		PACKET_SIZES[76] = 0;
		PACKET_SIZES[77] = 8;
		PACKET_SIZES[78] = 0;
		PACKET_SIZES[79] = 9;
		PACKET_SIZES[80] = 7;
		PACKET_SIZES[81] = 4;
		PACKET_SIZES[82] = 3;
		PACKET_SIZES[83] = 5;
		PACKET_SIZES[84] = 4;
		PACKET_SIZES[85] = 3;
		PACKET_SIZES[86] = -1;
		PACKET_SIZES[87] = -1;
		PACKET_SIZES[88] = 4;
		PACKET_SIZES[89] = 6;
		PACKET_SIZES[90] = 7;
		PACKET_SIZES[91] = 3;
		PACKET_SIZES[92] = 9;
		PACKET_SIZES[93] = 2;
		PACKET_SIZES[94] = -1;
		PACKET_SIZES[95] = -1;
		PACKET_SIZES[96] = -1;
		PACKET_SIZES[97] = -2;
		PACKET_SIZES[98] = -2;
		PACKET_SIZES[99] = 12;
		PACKET_SIZES[100] = -2;
		PACKET_SIZES[101] = -2;
		PACKET_SIZES[102] = 15;
		PACKET_SIZES[103] = 4;
		PACKET_SIZES[104] = 7;
		PACKET_SIZES[105] = -2;
		PACKET_SIZES[106] = -1;
		PACKET_SIZES[107] = 2;
		PACKET_SIZES[108] = 3;
		PACKET_SIZES[109] = 7;
		PACKET_SIZES[110] = -1;
		PACKET_SIZES[111] = -2;
		PACKET_SIZES[112] = -1;
		PACKET_SIZES[113] = 3;
		PACKET_SIZES[114] = 8;
		PACKET_SIZES[115] = -1;
		PACKET_SIZES[116] = 1;
		PACKET_SIZES[117] = 8;
		PACKET_SIZES[118] = -1;
		PACKET_SIZES[119] = 7;
		PACKET_SIZES[120] = -2;
		PACKET_SIZES[121] = 1;
	}
	
}
