/**
 * Copyright (c) 2014 Virtue Studios
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */
package org.virtue;

import java.io.File;
import java.math.BigInteger;

import org.virtue.game.world.region.Tile;


/**
 * @author Im Frizzy <skype:kfriz1998>
 * @since Aug 8, 2014
 */
public class Constants {
	
	/**
	 * The Framework Name
	 */
	public static final String FRAME_NAME = "Virtue";
	
	/**
	 * The Framework Version
	 */
	public static final double FRAME_VERSION = 1.0;
	
	/**
	 * The Framework Major Revision
	 */
	public static final int FRAME_MAJOR = 835;
	
	/**
	 * The Framework Minor Revision
	 */
	public static final int FRAME_MINOR = 1;
	
	/**
	 * The interval between maintenance thread cycles, in minutes
	 * The maintenance thread is responsible for auto-saving player data and the account index, and for performing cleanup operations
	 */
	public static final int MAINTANANCE_INTERVAL = 1;
	
	/**
	 * Represents the initial server day. This is a day determined by Jagex, a few months prior to the release of RS2.
	 */
	public static final int SERVER_DAY_INITIAL = 11745;
	
	/**
	 * The number of ticks before a ground item is destroyed, after being dropped
	 */
	public static final int ITEM_REMOVAL_DELAY = 300;
	
	/**
	 * The number of ticks where the player is inactive before they are automatically logged out
	 * NB: 100 ticks = 1 minute
	 */
	public static final int KICKOUT_TIME = 500;

	/*
	 * Server Name
	 */
	public static final String SERVER_NAME = "Virtue";
	
	/**
	 * The rate to multiply all xp gains by, where 1 is the normal RuneScape rate
	 */
	public static final float GLOBAL_XP_MULTIPLYER = 1;
	
	/**
	 * Whether or not to lead GE Prices from a JSON File
	 */
	public static final boolean CUSTOM_GE_PRICES = true;
	
	/**
	 * The Start spawn location
	 */
	public static final Tile START_TILE = new Tile(3210, 3256, 0);

	/**
	 * The Death Spawn Location
	 */
	public static final Tile RESPAWN_TILE = new Tile(3210, 3256, 0);
	
	/**
	 * The Cache Repository
	 */
	public static final String CACHE_REPOSITORY = System.getProperty("user.home") + "/Desktop/863/";
	
	/**
	 * The packed npc extra data, which includes descriptions and animations
	 */
	public static final File NPC_DATA = new File("./repository/npc_data_861.dat");
	
	/**
	 * The packed item extra data, which includes descriptions and weights
	 */
	public static final File ITEM_DATA = new File("./repository/item_data_861.dat");
	
	/**
	 * The OnDemand Delta Keys
	 */
	public static final int[] ONDEMAND_DELTA = { 3264,69795,41651,35866,358716,44375,18239,20836,177863,1096567,429391,
			556463,834655,1154849,35059,825361,974,20622,1244,65946,2153,119,1359528,4234361,8991,23087 };
	/*public static int[] ONDEMAND_DELTA = { 2669, 69795, 41651, 35866, 358716,
			44375, 18239, 20659, 169721, 1097108, 424520, 554913, 810107,
			1150265, 34839, 819640, 20552, 1244, 65295, 2109, 119, 1349461,
			4157265, 8991, 23087 };*/
	
	/**
	 * The OnDemand Session Token
	 */
	private static final String ONDEMAND_TOKEN = "MqKejhQfogYFtdG1a-j6wGs0-4PQG-Jk";
		
	
	public static String getJs5Token () {
		return Virtue.getInstance().getProperty("js5.token", ONDEMAND_TOKEN);
	}
	
	/**
	 * The Login Session Token
	 */
	private static final String LOGIN_TOKEN = "wwGlrZHF5gKN6D3mDdihco3oPeYN2KFybL9hUUFqOvk";
	
	public static String getLoginToken () {
		return Virtue.getInstance().getProperty("login.token", LOGIN_TOKEN);
	}
	
	
	public static final int SERVER_PORT = 43594;

	public static BigInteger getLoginModulus () {
		return new BigInteger(Virtue.getInstance().getProperty("login.modulus", LOGIN_MODULUS));
	}

	public static BigInteger getLoginKey () {
		return new BigInteger(Virtue.getInstance().getProperty("login.key", LOGIN_EXPONENT));
	}



	/**
	 * The OnDemand Modulus RSA Key
	 */
	public static final String ONDEMAND_MODULUS = "688829851838254695371630341593425836407881711687169507496886778988733479748269568168294364117789695774936074625724075880966005196638565844764875471996863796973080071880753523660112897897599351303373327768726175961212198259534079863255901893405234191055850041906519755095393461102089195714461438165166797840822139954326420467681389670227770933039789881930044133978643418967076378075179442210997357122026009509784523825532074090389493984341102643617321274941428765926469154003062487908333410564832612530645906109337484282922464463352177737559689131335201300684895042046471294301585715468791738329491645269481455779971589987231522886830110087676887629301100844511837570542078197236647920217935591599903602461545305244115351316350151428316367682319530899719053815830362379666644747337671435318908523697957977447272405429563839094803415914633578675569949407518716692236845980272268974197742449446748484399700827870488752837051857940405843773032597887945561948378463869399575041083843785917634281859830384072082951414651494700361111360782080068279571550011886985034500074633000429434150062261531976529530142121168904839896436458789997299965555675866933586429360482084197397866910944830376142824496867091546502911529991689925306738728675233";

	/**
	 * The OnDemand Exponent RSA Key
	 */
	public static final String ONDEMAND_EXPONENT = "105767654897971481751143874871517527378008051401620256556466906586563696945341359300510340511731048241194771182059926081300042881025586891311304177406723536154235084964768340152764332995766395656893751580583357625428053635132695205211470478559239386370981567232331481384942008316986184544221210190519454455837056843620958682366874044455835007693049812805926943867236656012110557281696304789191852002974620957580628702203782009728694904625242472232801379216863720822101394582187433294498666562612121090313712150056656611365316689728137762989809599594521120722524662528245733472036514560667275932826867667833313845825313650313023489605756310296392638015923974889308877562932308796873287021891353835560376301137418744547303684803812731214693365506270459109827504637525117372644162703555966856661803721150208392922823568549398884716346655233950693158202438197541840099591399515865101179177147753488994157828016595572511332182383520216590942096289327689995927417265973912844655098102960221045258188702692754621545663703765999637368479284698288590064967943213757808738947522959717260967636799338518063554867371290270253848105477660096272810923540840154288532185644496865659523805244795025459361055335063947593864291136457505190995946505553";

	/**
	 * The Login Modulus RSA Key
	 */
	public static final String LOGIN_MODULUS = "28116980751138310870744801438152664691867919059557421225027343943294306113852003493857994353793861957824233991879630609162117624745630286183698754511882728135062140591669167316874402751749826420446017395034778652427631428824538600328331527266094129465344924242766222436898151710034207738807166202279366542486605903931028065971836206440402406722615116057923864148789957919334561879418885930055864820887460970087612222187353192866492368992914961121134232850090663991129065251240414518618199996875550730664341865885444862634303392761906638556033253915236762405585586540658338545821015792906319828267527405533997088519231";

	/**
	 * The Login Exponent RSA Key
	 */
	public static final String LOGIN_EXPONENT = "27624889612978864411969692915492776286820808218943533464752898004313904674778072004661736979733383759773905225096196269648423849998796620647395559806218302098305556139243140264790008593392607583693471780311723109538355245159406754583537040765732349608214591329961961376197750715002252716813302894010534685302820648141518866252586765038182112580357839160612965988060425363811520678629774473429468660420455110473510143896891414014819334702152140936162983996670818089047946594279876236397238308868602559893597911668236081077940179942182655350923230253141276805076885706535218944389674943516793129917811660069145243708913";


	/**
	 * The 834 Packet Sizes
	 */
	public static final int[] PACKET_SIZES = new int[122];

	/**
	 * Loads the 834 Packet Sizes
	 */
	static {
		PACKET_SIZES[0] = -2;
		PACKET_SIZES[1] = 8;
		PACKET_SIZES[2] = 9;
		PACKET_SIZES[3] = 18;
		PACKET_SIZES[4] = 0;
		PACKET_SIZES[5] = 3;
		PACKET_SIZES[6] = -1;
		PACKET_SIZES[7] = 9;
		PACKET_SIZES[8] = 4;
		PACKET_SIZES[9] = -2;
		PACKET_SIZES[10] = 8;
		PACKET_SIZES[11] = 1;
		PACKET_SIZES[12] = 5;
		PACKET_SIZES[13] = -1;
		PACKET_SIZES[14] = -1;
		PACKET_SIZES[15] = -1;
		PACKET_SIZES[16] = -1;
		PACKET_SIZES[17] = 8;
		PACKET_SIZES[18] = 3;
		PACKET_SIZES[19] = 1;
		PACKET_SIZES[20] = 1;
		PACKET_SIZES[21] = -2;
		PACKET_SIZES[22] = 4;
		PACKET_SIZES[23] = 8;
		PACKET_SIZES[24] = -2;
		PACKET_SIZES[25] = 7;
		PACKET_SIZES[26] = 3;
		PACKET_SIZES[27] = 16;
		PACKET_SIZES[28] = 8;
		PACKET_SIZES[29] = 1;
		PACKET_SIZES[30] = 3;
		PACKET_SIZES[31] = 3;
		PACKET_SIZES[32] = 15;
		PACKET_SIZES[33] = 9;
		PACKET_SIZES[34] = -1;
		PACKET_SIZES[35] = 16;
		PACKET_SIZES[36] = 4;
		PACKET_SIZES[37] = 8;
		PACKET_SIZES[38] = 4;
		PACKET_SIZES[39] = 3;
		PACKET_SIZES[40] = -1;
		PACKET_SIZES[41] = 9;
		PACKET_SIZES[42] = 8;
		PACKET_SIZES[43] = 7;
		PACKET_SIZES[44] = 3;
		PACKET_SIZES[45] = -1;
		PACKET_SIZES[46] = 3;
		PACKET_SIZES[47] = 4;
		PACKET_SIZES[48] = -1;
		PACKET_SIZES[49] = 9;
		PACKET_SIZES[50] = -1;
		PACKET_SIZES[51] = 17;
		PACKET_SIZES[52] = -1;
		PACKET_SIZES[53] = 3;
		PACKET_SIZES[54] = 9;
		PACKET_SIZES[55] = 2;
		PACKET_SIZES[56] = 18;
		PACKET_SIZES[57] = 6;
		PACKET_SIZES[58] = 0;
		PACKET_SIZES[59] = 11;
		PACKET_SIZES[60] = 0;
		PACKET_SIZES[61] = -2;
		PACKET_SIZES[62] = 3;
		PACKET_SIZES[63] = -1;
		PACKET_SIZES[64] = -1;
		PACKET_SIZES[65] = -1;
		PACKET_SIZES[66] = -1;
		PACKET_SIZES[67] = -1;
		PACKET_SIZES[68] = -1;
		PACKET_SIZES[69] = 0;
		PACKET_SIZES[70] = 4;
		PACKET_SIZES[71] = 3;
		PACKET_SIZES[72] = -1;
		PACKET_SIZES[73] = 11;
		PACKET_SIZES[74] = 3;
		PACKET_SIZES[75] = 6;
		PACKET_SIZES[76] = 0;
		PACKET_SIZES[77] = 8;
		PACKET_SIZES[78] = 0;
		PACKET_SIZES[79] = 9;
		PACKET_SIZES[80] = 7;
		PACKET_SIZES[81] = 4;
		PACKET_SIZES[82] = 3;
		PACKET_SIZES[83] = 5;
		PACKET_SIZES[84] = 4;
		PACKET_SIZES[85] = 3;
		PACKET_SIZES[86] = -1;
		PACKET_SIZES[87] = -1;
		PACKET_SIZES[88] = 4;
		PACKET_SIZES[89] = 6;
		PACKET_SIZES[90] = 7;
		PACKET_SIZES[91] = 3;
		PACKET_SIZES[92] = 9;
		PACKET_SIZES[93] = 2;
		PACKET_SIZES[94] = -1;
		PACKET_SIZES[95] = -1;
		PACKET_SIZES[96] = -1;
		PACKET_SIZES[97] = -2;
		PACKET_SIZES[98] = -2;
		PACKET_SIZES[99] = 12;
		PACKET_SIZES[100] = -2;
		PACKET_SIZES[101] = -2;
		PACKET_SIZES[102] = 15;
		PACKET_SIZES[103] = 4;
		PACKET_SIZES[104] = 7;
		PACKET_SIZES[105] = -2;
		PACKET_SIZES[106] = -1;
		PACKET_SIZES[107] = 2;
		PACKET_SIZES[108] = 3;
		PACKET_SIZES[109] = 7;
		PACKET_SIZES[110] = -1;
		PACKET_SIZES[111] = -2;
		PACKET_SIZES[112] = -1;
		PACKET_SIZES[113] = 3;
		PACKET_SIZES[114] = 8;
		PACKET_SIZES[115] = -1;
		PACKET_SIZES[116] = 1;
		PACKET_SIZES[117] = 8;
		PACKET_SIZES[118] = -1;
		PACKET_SIZES[119] = 7;
		PACKET_SIZES[120] = -2;
		PACKET_SIZES[121] = 1;
	}
	
}
